{"version":3,"sources":["components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVIsibility","className","onClick","Field","fields","map","row","column","nanoid","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","DirectoinKeyCodeMap","37","38","39","40","OppositeDirection","Delta","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","tick","setTick","direction","setDirection","setDifficulty","useEffect","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8884d3f6.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Navigation = ({length, difficulty = 3, onChangeDifficulty}) => {\n    const upVisibility = difficulty < 5 ? '' : 'is-hidden'\n    const downVIsibility = difficulty > 1 ? '' : 'ishidden'\n    const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n    const onDownDifficulty = () => onChangeDifficulty(difficulty -1)\n    return (\n        <div className=\"navigation\">\n            <div className=\"navigation-item\">\n                <span className=\"navigation-label\">Length: </span>\n                <div className=\"navigation-item-number-container\">\n                    <div className=\"num-board\">{length}</div>\n                </div>\n            </div>\n            <div className=\"navigation-item\">\n                <span className=\"navigation-label\">Difficulty: </span>\n                <div className=\"navigation-item-number-container\">\n                    <span className=\"num-board\">{difficulty}</span>\n                    <div className=\"difficulty-button-container\">\n                        <div \n                            className={`difficulty-button difficulty-up ${upVisibility}`}\n                            onClick={onUpDifficulty}\n                        ></div>\n                        <div\n                            className={`difficulty-button difficulty-down ${downVIsibility}`}\n                            onClick={onDownDifficulty}\n                        ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Navigation;","import React from \"react\"\nimport { nanoid } from \"nanoid\"\n\nconst Field = ({fields}) => {\n    return (\n        <div className=\"field\">\n            {fields.map((row) => {\n                return row.map((column) => {\n                    return <div className={`dots ${column}`} key={nanoid()}></div>\n                })\n            })}\n        </div>\n    )\n}\n\nexport default Field;","import React from \"react\"\n\nconst Button = ({status, onStart, onStop ,onRestart}) => {\n    return (\n        <div className=\"button\">\n            {status === \"gameover\" && <button className=\"btn btn-gameover\" onClick={onRestart}>gameover</button>}\n            {status === \"init\" && <button className=\"btn btn-init\" onClick={onStart}>start</button>}\n            {status === \"suspended\" && <button className=\"btn btn-suspended\" onClick={onStart}>start</button>}\n            {status === \"playing\" && <button className=\"btn btn-playing\" onClick={onStop}>stop</button>}\n        </div>\n    )\n}\n\nexport default Button;","import React from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n    faArrowLeft,\n    faArrowUp,\n    faArrowDown,\n    faArrowRight\n} from \"@fortawesome/free-solid-svg-icons\"\n\nconst ManipulationPanel = ({onChange}) => {\n    const onUp = () => onChange('up')\n    const onRight = () => onChange(\"right\")\n    const onLeft = () => onChange(\"left\")\n    const onDown = () => onChange(\"down\")\n    return (\n        <div className=\"manipulation-panel\">\n            <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n                <FontAwesomeIcon icon={faArrowLeft} />\n            </button>\n            <div>\n            <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n                <FontAwesomeIcon icon={faArrowUp}/>\n            </button>\n            <button className=\"manipulation-btn btn btn-Down\" onClick={onDown}>\n                <FontAwesomeIcon icon={faArrowDown} />\n            </button>\n            </div>\n            <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n                <FontAwesomeIcon icon={faArrowRight} />\n            </button>\n        </div>\n    )\n}\n\nexport default ManipulationPanel;","export const getFoodPosition = (fieldSize, excludes) => {\n    while (true) {\n        const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n        const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n        const conflict = excludes.some((item) => item.x === x && item.y === y);\n\n        if (!conflict) {\n            return { x, y };\n        }\n    }\n};\n\nexport const initFields = (fieldSize, snake) => {\n    const fields = [];\n    for (let i = 0; i < fieldSize; i++) {\n        const cols = new Array(fieldSize).fill(\"\");\n        fields.push(cols);\n    }\n\n    fields[snake.y][snake.x] = \"snake\";\n    const food = getFoodPosition(fieldSize, [snake]);\n    fields[food.y][food.x] = \"food\";\n    return fields;\n};\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport Navigation from \"./components/Navigation\";\nimport Field from \"./components/Field\";\nimport Button from \"./components/Button\";\nimport ManipulationPanel from \"./components/ManipulationPanel\";\nimport { initFields, getFoodPosition } from \"./utils\";\n\nconst initialPosition = { x: 17, y: 17 };\nconst initialValues = initFields(35, initialPosition);\nconst defaultInterval = 100;\nconst defaultDifficulty = 3;\n\nconst Difficulty = [1000, 500, 100, 50, 10];\n\nconst GameStatus = Object.freeze({\n    init: \"init\",\n    playing: \"playing\",\n    suspended: \"suspended\",\n    gameover: \"gameover\",\n});\n\nconst Direction = Object.freeze({\n    up: \"up\",\n    right: \"right\",\n    left: \"left\",\n    down: \"down\",\n});\n\nconst DirectoinKeyCodeMap = Object.freeze({\n    37: Direction.left,\n    38: Direction.up,\n    39: Direction.right,\n    40: Direction.down,\n});\n\nconst OppositeDirection = Object.freeze({\n    up: \"down\",\n    right: \"left\",\n    left: \"right\",\n    down: \"up\",\n});\n\nconst Delta = Object.freeze({\n    up: { x: 0, y: -1 },\n    right: { x: 1, y: 0 },\n    left: { x: -1, y: 0 },\n    down: { x: 0, y: 1 },\n});\n\nlet timer = undefined;\n\nconst unsubscribe = () => {\n    if (!timer) {\n        return;\n    }\n    clearInterval(timer);\n};\n\nconst isCollision = (fieldSize, position) => {\n    if (position.y < 0 || position.x < 0) {\n        return true;\n    }\n\n    if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n        return true;\n    }\n\n    return false;\n};\n\nconst isEatingMyself = (fields, position) => {\n    return fields[position.y][position.x] === \"snake\";\n};\n\nexport default function App() {\n    const [fields, setFields] = useState(initialValues);\n    const [body, setBody] = useState([]);\n    const [status, setStatus] = useState(GameStatus.init);\n    const [tick, setTick] = useState(0);\n    const [direction, setDirection] = useState(Direction.up);\n    const [difficulty, setDifficulty] = useState(defaultDifficulty);\n\n    useEffect(() => {\n        setBody([initialPosition]);\n        const interval = Difficulty[difficulty - 1];\n        timer = setInterval(() => {\n            setTick((tick) => tick + 1);\n        }, interval);\n        return unsubscribe;\n    }, [difficulty]);\n\n    useEffect(() => {\n        if (body.length === 0 || status !== GameStatus.playing) {\n            return;\n        }\n        const canContinue = handleMoving();\n        if (!canContinue) {\n            setStatus(GameStatus.gameover);\n        }\n    }, [tick]);\n\n    const onStart = () => setStatus(GameStatus.playing);\n    const onStop = () => setStatus(GameStatus.suspended);\n    const onRestart = () => {\n        timer = setInterval(() => {\n            setTick((tick) => tick + 1);\n        }, defaultInterval);\n        setDirection(Direction.up);\n        setStatus(GameStatus.init);\n        setBody([initialPosition]);\n        setFields(initFields(35, initialPosition));\n    };\n\n    const onChangeDirection = useCallback(\n        (newDirection) => {\n            if (status !== GameStatus.playing) {\n                return direction;\n            }\n            if (OppositeDirection[direction] === newDirection) {\n                return;\n            }\n            setDirection(newDirection);\n        },\n        [direction, status]\n    );\n\n    const onChangeDifficulty = useCallback(\n        (difficulty) => {\n            if (status !== GameStatus.init) {\n                return;\n            }\n            if (difficulty < 1 || difficulty > difficulty.length) {\n                return;\n            }\n            setDifficulty(difficulty);\n        },\n        [status, difficulty]\n    );\n\n    useEffect(() => {\n        const handleKeyDown = (e) => {\n            const newDirection = DirectoinKeyCodeMap[e.keyCode];\n            if (!newDirection) {\n                return;\n            }\n            onChangeDirection(newDirection);\n        };\n        document.addEventListener(\"keydown\", handleKeyDown);\n        return () => document.removeEventListener(\"keydown\", handleKeyDown);\n    }, [onChangeDirection]);\n\n    const handleMoving = () => {\n        const { x, y } = body[0];\n        const delta = Delta[direction];\n        const newPosition = {\n            x: x + delta.x,\n            y: y + delta.y,\n        };\n        if (\n            isCollision(fields.length, newPosition) ||\n            isEatingMyself(fields, newPosition)\n        ) {\n            unsubscribe();\n            return false;\n        }\n        const newBody = [...body];\n        if (fields[newPosition.y][newPosition.x] !== \"food\") {\n            const removingTrack = newBody.pop();\n            fields[removingTrack.y][removingTrack.x] = \"\";\n        } else {\n            const food = getFoodPosition(fields.length, [\n                ...newBody,\n                newPosition,\n            ]);\n            fields[food.y][food.x] = \"food\";\n        }\n        fields[newPosition.y][newPosition.x] = \"snake\";\n        newBody.unshift(newPosition);\n        setBody(newBody);\n        setFields(fields);\n        return true;\n    };\n    return (\n        <div className=\"App\">\n            <header className=\"header\">\n                <div className=\"title-container\">\n                    <h1 className=\"title\">Snake Game</h1>\n                </div>\n                <Navigation\n                    length={body.length}\n                    difficulty={difficulty}\n                    onChangeDifficulty={onChangeDifficulty}\n                />\n            </header>\n            <main className=\"main\">\n                <Field fields={fields} />\n            </main>\n            <footer className=\"footer\">\n                <Button\n                    status={status}\n                    onStop={onStop}\n                    onStart={onStart}\n                    onRestart={onRestart}\n                />\n                <ManipulationPanel onChange={onChangeDirection} />\n            </footer>\n        </div>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}